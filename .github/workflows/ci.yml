name: CI
# Based on https://hashrocket.com/blog/posts/build-the-ultimate-elixir-ci-with-github-actions

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

env:
  MIX_ENV: test

jobs:
  test-elixir:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:13.5-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    strategy:
      matrix:
        elixir: [1.16.2]
        otp: [26.2]

    steps:
      - uses: actions/checkout@v5

      - name: Setup elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v4
        id: mix-cache #id to use in retrieve action
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: Install npm Dependencies
        run: |
          . ~/.nvm/nvm.sh
          nvm install 16.13.2
          nvm use 16.13.2
          npm --prefix ./api_docs install

      - name: Install Mix Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Check Formatting
        run: mix format --check-formatted

      - name: Retrieve PLT Cache
        uses: actions/cache@v4
        with:
          path: _build/dev
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        env:
          MIX_ENV: dev

      - name: Run dialyzer
        run: mix dialyzer
        env:
          MIX_ENV: dev

      - name: Run credo
        run: mix credo --strict
        env:
          MIX_ENV: dev

      - name: Check security issues
        run: mix sobelow --config
        env:
          MIX_ENV: dev

      - name: Run Tests
        run: mix test
        env:
          MIX_ENV: test

      - name: Run assets format-check
        run: npm run --prefix ./api_docs format-check
        env:
          MIX_ENV: dev
      

